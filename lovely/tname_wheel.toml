[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Game:update
[[patches]]
[patches.pattern]
target = 'game.lua'
position = 'before'
pattern = '''if self.STATE == self.STATES.PLAY_TAROT then'''
payload = '''
if self.STATE == self.STATES.WHEEL then
  update_wheel(dt)
end

'''
match_indent = true

# Game:draw
[[patches]]
[patches.pattern]
target = 'cardarea.lua'
position = 'after'
pattern = '''(self.config.type == 'hand' and state == G.STATES.SMODS_BOOSTER_OPENED) or'''
payload = '''
(self.config.type == 'hand' and G.STATE == G.STATES.WHEEL) or'''
match_indent = true


# ease_background_colour_blind
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
position = 'before'
pattern = '''elseif state == G.STATES.TAROT_PACK then'''
payload = '''
elseif state == G.STATES.WHEEL then
    ease_colour(G.C.DYN_UI.MAIN, mix_colours(G.C.MONEY, G.C.BLACK, 0.9))
'''
match_indent = true

# Game:draw
[[patches]]
[patches.pattern]
target = 'cardarea.lua'
position = 'after'
pattern = '''(self.config.type == 'hand' and state == G.STATES.SMODS_BOOSTER_OPENED) or'''
payload = '''
(self.config.type == 'hand' and G.STATE == G.STATES.WHEEL) or'''
match_indent = true

# Stop shop from re-appearing after consumable was used
[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
position = 'before'
pattern = '''
G.shop.alignment.offset.y = G.shop.alignment.offset.py'''
payload = '''
if G.STATE ~= G.STATES.WHEEL then
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
position = 'after'
pattern = '''
G.shop.alignment.offset.py = nil'''
payload = '''
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = '''
 assert(pool, ("Attempted to insert object \"%s\" into an empty pool."):format(center.key or "UNKNOWN"))
'''
position = 'before'
payload = '''
	if pool and center then
'''
match_indent = false

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = '''
table.insert(pool, center)
'''
position = 'after'
payload = '''
	end
'''
match_indent = false

# fix a stupid crash caused by smods (i hope)(im begging)(please?)
[[patches]]
[patches.pattern]
target = 'cardarea.lua'
match_indent = true
position = 'at'
pattern = '''
self:handle_card_limit(card.ability.card_limit, card.ability.extra_slots_used)
'''
payload = '''
  if card and card.ability then
    self:handle_card_limit(card.ability.card_limit, card.ability.extra_slots_used)
  end
'''

# fuck everything
[[patches]]
[patches.pattern]
target = 'cardarea.lua'
match_indent = true
position = 'at'
pattern = '''
        if card.facing == 'back' and self.config.type ~= 'discard' and self.config.type ~= 'deck' and not stay_flipped then
        card:flip()
    end
'''
payload = '''
if card then
    if card.facing == 'back' and self.config.type ~= 'discard' and self.config.type ~= 'deck' and not stay_flipped then
        card:flip()
    end
  end
'''

# NIL CHECKS
[[patches]]
[patches.pattern]
target = 'cardarea.lua'
match_indent = true
position = 'at'
pattern = '''
    card:set_card_area(self)
    self:set_ranks()
    self:align_cards()
'''
payload = '''
  if card then
    card:set_card_area(self)
  end
    self:set_ranks()
    self:align_cards()
'''

