[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Add other currencies on cashout. its all going in here now
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
position = 'before'
pattern = '''
add_round_eval_row({name = 'bottom', dollars = dollars})'''
payload = '''
    for _, area in ipairs(SMODS.get_card_areas('jokers')) do
        for _, _card in ipairs(area.cards) do
            local ret = _card:calculate_plincoin_bonus()
    
            -- TARGET: calc_plincoin_bonus per card
            if ret then
                i = i+1
                add_round_eval_plincoins({name='plincoins', plincoins = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
                pitch = pitch + 0.06
            end
        end
    end
    for _, area in ipairs(SMODS.get_card_areas('jokers')) do
        for _, _card in ipairs(area.cards) do
            if _card.config.center.calc_crypto_bonus then
                local ret = _card.config.center:calc_crypto_bonus(_card)
        
                -- TARGET: calc_crypto_bonus per card
                if ret then
                    i = i+1
                    add_round_eval_crypto({name='cryptocurrency', cryptocurrency = ret, bonus = true, pitch = pitch, card = _card})
                    pitch = pitch + 0.06
                end
            end
        end
    end
    for _, area in ipairs(SMODS.get_card_areas('jokers')) do
        for _, _card in ipairs(area.cards) do
            local ret = _card:calculate_spark_point_bonus()
    
            -- TARGET: calc_spark_point_bonus per card
            if ret then
                i = i+1
                add_round_eval_spark_points({name='spark_points', spark_points = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
                pitch = pitch + 0.06
            end
        end
    end
    for _, area in ipairs(SMODS.get_card_areas('jokers')) do
        for _, _card in ipairs(area.cards) do
            local ret = _card:calculate_credits_bonus()
    
            -- TARGET: calc_credits_bonus per card
            if ret then
                i = i+1
                add_round_eval_credits({name='credits', credits = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
                pitch = pitch + 0.06
            end
        end
    end
    if G.GAME.selected_back.name == "b_hpot_domn" and G.GAME.blind.boss then
        i = i+1
        add_round_eval_all_currencies({bonus = true, name='deck'..i, pitch = pitch, card = G.GAME.selected_back})
        dollars = dollars + 1
    end
'''
match_indent = true

# Add plincoins on cashout for Direct Deposit. janky as fuck
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
position = 'after'
pattern = '''
add_round_eval_row({name = 'bottom', dollars = dollars})'''
payload = '''
    for _, area in ipairs(SMODS.get_card_areas('jokers')) do
            for _, _card in ipairs(area.cards) do
            local ret = _card:calculate_plincoin_bonus_delayed()
    
            -- TARGET: calc_plincoin_bonus_delayed per card
            if ret then
                i = i+1
                add_round_eval_plincoins({name='plincoins', plincoins = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
                pitch = pitch + 0.06
            end
        end
    end
'''
match_indent = true

# Patch add_round_eval_row to handle decks
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
position = 'before'
pattern = '''
elseif string.find(config.name, 'joker') then'''
payload = '''
    elseif string.find(config.name, 'deck') then
      table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = config.card.loc_name, colours = {G.C.FILTER}, shadow = true, pop_in = 0, scale = 0.6*scale, silent = true})}})
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
position = 'at'
pattern = '''
if config.card then config.card:juice_up(0.7, 0.46) end'''
payload = '''
if config.card and config.card.juice_up then config.card:juice_up(0.7, 0.46) end
'''
match_indent = true