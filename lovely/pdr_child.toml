
[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

#payout screen name
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
position = 'at'
pattern = '''
table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = localize{type = 'name_text', set = config.card.config.center.set, key = config.card.config.center.key}, colours = {G.C.FILTER}, shadow = true, pop_in = 0, scale = 0.6*scale, silent = true})}})
'''
payload = '''
table.insert(left_text, {
    n = G.UIT.O,
    config = {
        object = DynaText({
            string = (
                config.card.config.center.key == 'j_hpot_child'
                and config.card.ability.name
                or localize{
                    type = 'name_text',
                    set = config.card.config.center.set,
                    key = config.card.config.center.key
                }
            ),
            colours = {G.C.FILTER},
            shadow = true,
            pop_in = 0,
            scale = 0.6 * scale,
            silent = true
        })
    }
})
'''
match_indent = true

# blueprint compat for children
[[patches]]
[patches.pattern]
target = 'card.lua'
position = 'at'
pattern = '''            if other_joker and other_joker ~= self and other_joker.config.center.blueprint_compat then'''
payload = '''            if other_joker and other_joker ~= self and (other_joker.config.center.blueprint_compat or other_joker.ability.quantum_1 and other_joker.ability.quantum_2
                                                                                                                and (other_joker.ability.quantum_1.config.center.blueprint_compat
                                                                                                                    or other_joker.ability.quantum_2.config.center.blueprint_compat)) then'''
match_indent = true

# blueprint compat for children ()
[[patches]]
[patches.pattern]
target = 'card.lua'
position = 'at'
pattern = '''if G.jokers.cards[i] == self then other_joker = G.jokers.cards[i+1] end'''
payload = '''if G.jokers.cards[i] == (self.quantum or self) then other_joker = G.jokers.cards[i+1] end'''
match_indent = true
times = 2