[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
position = 'at'
pattern = '''
{n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28*2+spacing, minh = 1, colour = temp_col2}, nodes={
'''
payload = '''
{n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28*2+spacing, minh = 1, colour = temp_col2, hover = true, on_demand_tooltip = {filler = {func = PissDrawer.Shop.currency_display_small, args = {remove_dollars = true}}}}, nodes={
'''
match_indent = true

# [[patches]]
# [patches.pattern]
# target = 'functions/UI_definitions.lua'
# position = 'at'
# pattern = '''
# {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28+spacing, minh = 1, colour = temp_col2}, nodes={
# {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'dollars', prefix = localize('$')}},
# '''
# payload = '''
# {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28+spacing, minh = 1, colour = G.C.PURPLE, button = 'toggle_currencies', emboss = 0.05}, nodes={
# {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'dollars', prefix = localize('$')}},
# '''
# match_indent = true

# [[patches]]
# [patches.pattern]
# target = 'functions/UI_definitions.lua'
# position = 'at'
# pattern = '''
# {n=G.UIT.C, config={align = "cm"}, nodes={
#                                   {n=G.UIT.C, config={align = "cm", padding = 0.05, minw = 1.45 + spacing, minh = 1.15, colour = temp_col, emboss = 0.05, r = 0.1}, nodes={
#                                   {n=G.UIT.R, config={align = "cm"}, nodes={
#                                       {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28+spacing, minh = 1, colour = temp_col2}, nodes={
#                                       {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'cryptocurrency', prefix = '£'}, font = SMODS.Fonts['hpot_plincoin'],},
#                                               scale_function = function ()
#                                                   return scale_number(G.GAME.cryptocurrency, 2.2 * scale, 10)
#                                               end, maxw = 1.35/2, colours = {SMODS.Gradients.hpot_advert}, font = SMODS.Fonts['hpot_plincoin'], shadow = true,spacing = 2, bump = true, scale = 2.2*scale}), id = 'crypto_text_UI'}}
#                                   }},
#                                   }},
#                                   }},
#                               }},
# '''
# payload = '''
# Toggle_currencies and {n=G.UIT.C, config={align = "cm"}, nodes={
#                                   {n=G.UIT.C, config={align = "cm", padding = 0.05, minw = 1.45 + spacing, minh = 1.15, colour = temp_col, emboss = 0.05, r = 0.1}, nodes={
#                                   {n=G.UIT.R, config={align = "cm"}, nodes={
#                                       {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 1.28+spacing, minh = 1, colour = temp_col2}, nodes={
#                                       {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'cryptocurrency', prefix = '£'}, font = SMODS.Fonts['hpot_plincoin'],},
#                                               scale_function = function ()
#                                                   return scale_number(G.GAME.cryptocurrency, 2.2 * scale, 10)
#                                               end, maxw = 1.35/2, colours = {SMODS.Gradients.hpot_advert}, font = SMODS.Fonts['hpot_plincoin'], shadow = true,spacing = 2, bump = true, scale = 2.2*scale}), id = 'crypto_text_UI'}}
#                                   }},
#                                   }},
#                                   }},
#                               }},
# '''
# match_indent = true

# [[patches]]
# [patches.pattern]
# target = 'functions/UI_definitions.lua'
# position = 'at'
# pattern = '''
# {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#             {n=G.UIT.T, config={text = localize('hpot_credit_text'), scale = 0.25, colour = G.C.PURPLE, shadow = true}}
#           }},
#           {n=G.UIT.R, config={minh = spacing},nodes={}},
#           {n=G.UIT.R, config={align = "cm", minh = 0.7}, nodes={
#             {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 0.64*2+spacing, minh = 0.7, colour = temp_col2}, nodes={
#               {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'credits_text', prefix = ''}}, maxw = 1.35, colours = {G.C.PURPLE}, font = G.LANGUAGES['en-us'].font, shadow = true,spacing = 2, bump = true, scale = 1.6*scale}), id = 'credits_UI_text'}}
#             }},
#           }},
#         }},
# '''
# payload = '''
# Toggle_currencies and {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#             {n=G.UIT.T, config={text = localize('hpot_credit_text'), scale = 0.25, colour = G.C.PURPLE, shadow = true}}
#           }},
#           {n=G.UIT.R, config={minh = spacing},nodes={}},
#           {n=G.UIT.R, config={align = "cm", minh = 0.7}, nodes={
#             {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 0.64*2+spacing, minh = 0.7, colour = temp_col2}, nodes={
#               {n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME, ref_value = 'credits_text', prefix = ''}}, maxw = 1.35, colours = {G.C.PURPLE}, font = G.LANGUAGES['en-us'].font, shadow = true,spacing = 2, bump = true, scale = 1.6*scale}), id = 'credits_UI_text'}}
#             }},
#           }},
#         }},
# '''
# match_indent = true

# [[patches]]
# [patches.pattern]
# target = 'functions/UI_definitions.lua'
# position = 'at'
# pattern = '''
# -- Chips tab

#         {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#               {n=G.UIT.T, config={text = (localize('k_round') .. " " .. localize('k_lower_score')), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
#           }},
#           {n=G.UIT.R, config={minh = spacing},nodes={}},
#           {n=G.UIT.R, config={align = "cm", minh = 0.7}, nodes={
#             {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 3.3, minh = 0.7, colour = temp_col2}, nodes={
#               {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
#               {n=G.UIT.B, config={w=0.1,h=0.1}},
#               {n=G.UIT.T, config={ref_table = G.GAME, ref_value = 'chips_text', lang = G.LANGUAGES['en-us'], scale = 0.42, colour = G.C.WHITE, id = 'chip_UI_count', func = 'chip_UI_set', shadow = true}}
#             }},
#           }},
#         }},

#         -- ref
#         --[[
#         {n = G.UIT.C, config = {padding = 0, minw = 1.3}, nodes = {
#           {n = G.UIT.R, config = {align = "cm", padding = 0}, nodes = {
#             {n=G.UIT.C, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#               {n=G.UIT.T, config={text = (localize('k_round') .. " " .. localize('k_lower_score')), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
#             }},
#           }},
#           {n=G.UIT.R, config={minh = spacing},nodes={}},
#           {n = G.UIT.R, config = {align = "cm"}, nodes = {
#             {n=G.UIT.C, config={align = "cm", minw = 3.3, minh = 0.7, r = 0.1, colour = G.C.DYN_UI.BOSS_DARK, padding = 0}, nodes={
#               {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
#               {n=G.UIT.B, config={w=0.1,h=0.1}},
#               {n=G.UIT.T, config={ref_table = G.GAME, ref_value = 'chips_text', lang = G.LANGUAGES['en-us'], scale = 0.42, colour = G.C.WHITE, id = 'chip_UI_count', func = 'chip_UI_set', shadow = true}}
#             }}
#           }}
#         }}
#         ]]
# '''
# payload = '''
# Toggle_currencies and {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#               {n=G.UIT.T, config={text = (localize('k_round') .. " " .. localize('k_lower_score')), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
#           }},
#           {n=G.UIT.R, config={minh = spacing},nodes={}},
#           {n=G.UIT.R, config={align = "cm", minh = 0.7}, nodes={
#             {n=G.UIT.C, config={align = "cm", r = 0.1, minw = 3.3, minh = 0.7, colour = temp_col2}, nodes={
#               {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
#               {n=G.UIT.B, config={w=0.1,h=0.1}},
#               {n=G.UIT.T, config={ref_table = G.GAME, ref_value = 'chips_text', lang = G.LANGUAGES['en-us'], scale = 0.42, colour = G.C.WHITE, id = 'chip_UI_count', func = 'chip_UI_set', shadow = true}}
#             }},
#           }},
#         }} or {n=G.UIT.R, config={align = "cm",r=0.1, padding = 0,colour = G.C.DYN_UI.BOSS_MAIN, emboss = 0.05, id = 'row_dollars_chips'}, nodes={
#       {n=G.UIT.C, config={align = "cm", padding = 0.1}, nodes={
#         {n=G.UIT.C, config={align = "cm", minw = 1.3}, nodes={
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#             {n=G.UIT.T, config={text = localize('k_round'), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
#           }},
#           {n=G.UIT.R, config={align = "cm", padding = 0, maxw = 1.3}, nodes={
#             {n=G.UIT.T, config={text =localize('k_lower_score'), scale = 0.42, colour = G.C.UI.TEXT_LIGHT, shadow = true}}
#           }}
#         }},
#         {n=G.UIT.C, config={align = "cm", minw = 3.3, minh = 0.7, r = 0.1, colour = G.C.DYN_UI.BOSS_DARK}, nodes={
#           {n=G.UIT.O, config={w=0.5,h=0.5 , object = stake_sprite, hover = true, can_collide = false}},
#           {n=G.UIT.B, config={w=0.1,h=0.1}},
#           {n=G.UIT.T, config={ref_table = G.GAME, ref_value = 'chips_text', lang = G.LANGUAGES['en-us'], scale = 0.85, colour = G.C.WHITE, id = 'chip_UI_count', func = 'chip_UI_set', shadow = true}}
#         }}
#       }}
#     }}
# '''
# match_indent = true