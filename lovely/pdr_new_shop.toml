[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Prevent creating vanilla shop areas, since we are doing it manually
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
position = 'before'
pattern = '''
G.shop_jokers = CardArea(
'''
payload = '''
if false then
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
position = 'after'
pattern = '''
{card_limit = 2, type = 'shop', highlight_limit = 1, card_w = 1.27*G.CARD_W})
'''
payload = '''
end
'''
match_indent = true

# We don't need vanilla shop UI at all
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
position = 'at'
pattern = '''
local t = {n=G.UIT.ROOT, config = {align = 'cl', colour = G.C.CLEAR}, nodes={
'''
payload = '''
local t = {} or {n=G.UIT.ROOT, config = {align = 'cl', colour = G.C.CLEAR}, nodes={
'''
match_indent = true

# Ease Dollars UI display
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
match_indent = true
position = 'before'
pattern = '''
play_sound('coin1')
'''
payload = '''
local hpot_dollar_ui = G.shop and G.shop:get_UIE_by_ID('hotpot_currency_dollars')
if hpot_dollar_ui then
    attention_text({
        text = text .. tostring(math.abs(mod)),
        scale = hpot_dollar_ui.children[1].children[1].config.object.scale,
        hold = 0.7,
        cover = hpot_dollar_ui,
        cover_colour = col,
        align = 'cm',
        font = SMODS.Fonts.hpot_plincoin
    })
end
'''

# Patch bottlecap tooltip in plinko
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
match_indent = true
position = 'after'
pattern = '''
local sign = 1
'''
payload = '''

if self.area and self.area.config.plinko_rewards then
    popup_direction = 'tm'
end
'''

# Fix booster/voucher spawns
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
match_indent = true
position = 'at'
pattern = '''
card.ability.booster_pos = #G.shop_booster.cards + 1
card:start_materialize()
G.shop_booster:emplace(card)
'''
payload = '''
if G.shop_booster.cards then
    card.ability.booster_pos = #G.shop_booster.cards + 1
    card:start_materialize()
    G.shop_booster:emplace(card)
elseif PissDrawer.Shop.load_shop_booster then
    table.insert(PissDrawer.Shop.load_shop_booster.cards, card:save())
    card:remove()
end
'''
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
match_indent = true
position = 'at'
pattern = '''
card:start_materialize()
        G.shop_vouchers:emplace(card)
        G.shop_vouchers.config.card_limit = #G.shop_vouchers.cards
'''
payload = '''
if G.shop_vouchers.cards then
    card:start_materialize()
    G.shop_vouchers:emplace(card)
    G.shop_vouchers.config.card_limit = #G.shop_vouchers.cards
elseif PissDrawer.Shop.load_shop_vouchers then
    table.insert(PissDrawer.Shop.load_shop_vouchers.cards, card:save())
    card:remove()
end
'''

